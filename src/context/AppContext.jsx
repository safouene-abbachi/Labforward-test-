import React, { createContext, useContext, useState } from 'react';

//*Creating the Context for data access
export const DataStreamContext = createContext();
export const useDataStreamContextContext = () => useContext(DataStreamContext);

const now = Date.now();
//* Overriding current date for already existing data so it does not confuse with the new pushed ones
const backInTime = (arr) => {
  return arr
    .map((el, i) => {
      return {
        ...el,
        x: now - i * 1000,
      };
    })
    .reverse();
};

var initialState = [
  {
    datasets: [
      {
        label: 'Dataset_1',
        backgroundColor: 'rgba(255, 99, 132, 0.5)',
        borderColor: 'rgb(255, 99, 132)',

        fill: true,
        data: backInTime([
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 0 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 8 },
          { y: 9 },
          { y: 8 },
          { y: 1 },
          { y: 2 },
          { y: 0 },
          { y: 2 },
          { y: 1 },
          { y: 2 },
          { y: 3 },
          { y: 1 },
          { y: 2 },
          { y: 0 },
          { y: 8 },
          { y: 9 },
          { y: 2 },
          { y: 0 },
          { y: 3 },
          { y: 0 },
          { y: 2 },
          { y: 1 },
          { y: 2 },
          { y: 3 },
          { y: 8 },
          { y: 1 },
          { y: 0 },
          { y: 2 },
          { y: 1 },
          { y: 2 },
          { y: 3 },
          { y: 0 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 2 },
          { y: 7 },
          { y: 6 },
          { y: 9 },
          { y: 1 },
          { y: 2 },
          { y: 0 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
        ]),
      },
      {
        label: 'Dataset_2',
        backgroundColor: 'rgba(54, 162, 235, 0.5)',
        borderColor: 'rgb(54, 162, 235)',
        cubicInterpolationMode: 'monotone',
        fill: true,
        data: backInTime([
          { y: 0 },
          { y: 2 },
          { y: 1 },
          { y: 2 },
          { y: 3 },
          { y: 1 },
          { y: 0 },
          { y: 12 },
          { y: 1 },
          { y: 1 },
          { y: 2 },
          { y: 3 },
          { y: 0 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 2 },
          { y: 7 },
          { y: 7 },
          { y: 9 },
          { y: 1 },
          { y: 2 },
          { y: 0 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 3 },
          { y: 0 },
          { y: 2 },
          { y: 3 },
          { y: 1 },
          { y: 1 },
          { y: 2 },
          { y: 3 },
          { y: 1 },
          { y: 0 },
          { y: 9 },
          { y: 12 },
          { y: 0 },
          { y: 2 },
          { y: 3 },
          { y: 1 },
          { y: 2 },
          { y: 0 },
          { y: 1 },
          { y: 7 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 1 },
          { y: 2 },
        ]),
      },
      {
        label: 'Dataset_3',
        backgroundColor: 'rgba(0, 153, 0, 0.5)',
        borderColor: 'rgb(0, 153, 0)',

        fill: true,
        data: backInTime([
          { y: 2 },
          { y: 1 },
          { y: 3 },
          { y: 0 },
          { y: 2 },
          { y: 2 },
          { y: 9 },
          { y: 7 },
          { y: 2 },
          { y: 3 },
          { y: 1 },
          { y: 2 },
          { y: 9 },
          { y: 8 },
          { y: 2 },
          { y: 3 },
          { y: 1 },
          { y: 2 },
          { y: 0 },
          { y: 1 },
          { y: 2 },
          { y: 3 },
          { y: 0 },
          { y: 1 },
          { y: 0 },
          { y: 9 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 0 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 8 },
          { y: 9 },
          { y: 8 },
          { y: 1 },
          { y: 2 },
          { y: 0 },
          { y: 2 },
          { y: 1 },
          { y: 2 },
          { y: 1 },
          { y: 14 },
          { y: 10 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 2 },
          { y: 0 },
          { y: 3 },
        ]),
      },
    ],
    title: 'Datasteam_1',
    style: 'line',
  },
  {
    datasets: [
      {
        label: 'Dataset 1',
        backgroundColor: 'rgba(255, 99, 132, 0.5)',
        borderColor: 'rgb(255, 99, 132)',

        fill: true,
        data: backInTime([
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
        ]),
      },
      {
        label: 'Dataset 2',
        backgroundColor: 'rgba(54, 162, 235, 0.5)',
        borderColor: 'rgb(54, 162, 235)',
        cubicInterpolationMode: 'monotone',
        fill: true,
        data: backInTime([
          0,
          0,
          0,
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
        ]),
      },
      {
        label: 'Dataset 3',
        backgroundColor: 'rgba(0, 153, 0, 0.5)',
        borderColor: 'rgb(0, 153, 0)',

        fill: true,
        data: backInTime([
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 1 },
          { y: 1 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
          { y: 0 },
        ]),
      },
    ],
    title: 'Datasteam_2',
    style: 'bar',
  },
];

const AppContext = ({ children }) => {
  const [state] = useState(initialState);

  const value = {
    state,
  };

  return (
    <DataStreamContext.Provider value={value}>
      {children}
    </DataStreamContext.Provider>
  );
};

export default AppContext;
